name: Build and Push Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true

env:
 REGISTRY: ghcr.io
 IMAGE_NAME: afe
 IMAGE_TAG: main
        
jobs:
  Update-Version:
    name: upload release to PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Update version number
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION=${{ github.ref }}
            VERSION=${VERSION#refs/tags/v}
          else
            VERSION=${{ github.event.inputs.version }}
          fi
          echo "VERSION=${VERSION#refs/tags/v}" >> $GITHUB_ENV
      - name: Update the version
        run:
          python update_version.py
  
  build-and-push:
   runs-on: ubuntu-latest
   needs: Update-Version
   steps:
   - name: Check Out Repo
     uses: actions/checkout@v4

   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v3

   - name: Log in to GitHub Container Registry
     uses: docker/login-action@v3
     with:
       registry: ${{ env.REGISTRY }}
       username: ${{ github.actor }}
       password: ${{ secrets.AUTH }}

   - name: Extract Docker Meta Data
     id: meta
     uses: docker/metadata-action@v5
     with:
       images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

   - name: Build and Push Docker Image
     uses: docker/build-push-action@v5
     with:
       context: .
       file: ./Dockerfile
       push: true
       tags: ${{ steps.meta.outputs.tags }}
       labels: ${{ steps.meta.outputs.labels }}
